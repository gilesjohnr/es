[{"path":"https://gilesjohnr.github.io/es/articles/template_es_data.html","id":"template-environmental-sampling-data","dir":"Articles","previous_headings":"","what":"Template environmental sampling data","title":"Templates for input data sets","text":"primary data required methods es package shown template_es_data object. data 6 columns give time location observation Cycle Threshold (Ct) value qPCR assay. code shows view data template: detailed descriptions variable template_es_data object shown table :","code":"library(es) head(template_es_data) date location_id  lat   lon target_name ct_value 1 2020-03-07           1 23.8 90.37    target_0       NA 2 2020-03-07           1 23.8 90.37    target_0       NA 3 2020-03-07           1 23.8 90.37    target_0       NA 4 2020-03-07           1 23.8 90.37    target_0 29.94516 5 2020-03-07           1 23.8 90.37    target_1 31.61178 6 2020-03-07           1 23.8 90.37    target_1 32.22351  str(template_es_data) 'data.frame':   5200 obs. of  6 variables:      $ date       : IDate, format: \"2020-03-07\" \"2020-03-07\" ... $ location_id: int  1 1 1 1 1 1 1 1 1 1 ... $ lat        : num  23.8 23.8 23.8 23.8 23.8 23.8 23.8 23.8 23.8 23.8 ... $ lon        : num  90.4 90.4 90.4 90.4 90.4 ... $ target_name: chr  \"target_0\" \"target_0\" \"target_0\" \"target_0\" ... $ ct_value   : num  NA NA NA 29.9 31.6 ..."},{"path":"https://gilesjohnr.github.io/es/articles/template_es_data.html","id":"template-standard-curve-data","dir":"Articles","previous_headings":"","what":"Template standard curve data","title":"Templates for input data sets","text":"Standard curve data provide results standardized qPCR assays relate Ct values number gene copies particular target. data, calc_n_copies() function infer number gene copies observed Ct values data set formatted according template_es_data object. view template standard curve data, see code : detailed descriptions variable template_standard_curve object shown table :","code":"library(es) head(template_standard_curve)   target_name n_copies ct_value 1    target_1    1e+01 31.29322 2    target_1    1e+02 27.73392 3    target_1    1e+03 23.48097 4    target_1    1e+04 18.91412 5    target_1    1e+05 16.68971 6    target_2    1e+01 32.34237  str(template_standard_curve) 'data.frame':   15 obs. of  3 variables:  $ target_name: chr  \"target_1\" \"target_1\" \"target_1\" \"target_1\" ...  $ n_copies   : num  1e+01 1e+02 1e+03 1e+04 1e+05 1e+01 1e+02 1e+03 1e+04 1e+05 ...  $ ct_value   : num  31.3 27.7 23.5 18.9 16.7 ..."},{"path":"https://gilesjohnr.github.io/es/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"John R Giles. Maintainer.","code":""},{"path":"https://gilesjohnr.github.io/es/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"c, email=\"john.giles@gatesfoundation.org\")) (2024). es: Tools analyzing environmental sampling data. R package version 0.0.1, https://gilesjohnr.github.io/es/.","code":"@Manual{,   title = {es: Tools for analyzing environmental sampling data},   author = {{c} and {email=\"john.giles@gatesfoundation.org\"))}},   year = {2024},   note = {R package version 0.0.1},   url = {https://gilesjohnr.github.io/es/}, }"},{"path":"https://gilesjohnr.github.io/es/index.html","id":"es-an-r-package-for-analyzing-environmental-sampling-data-","dir":"","previous_headings":"","what":"Tools for analyzing environmental sampling data","title":"Tools for analyzing environmental sampling data","text":"package provides reproducible functions parsing compiling data sets measure infectious disease burden using Environmental Sampling (ES) methods. tools developed specifically epidemiological surveillance studies multiple pathogens locations Dhaka, Bangladesh Karachi, Pakistan. However, functions generalize applications provided use data formats. package currently development maintained John Giles (@gilesjohnr), details data models .","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"required-data","dir":"","previous_headings":"","what":"Required data","title":"Tools for analyzing environmental sampling data","text":"tools intended heavy lifting combining data multiple sources calculating relevant quantities. However, use must start putting data following standard format: standardized ES data format viral load calculations, information standard curves also required.","code":""},{"path":[]},{"path":"https://gilesjohnr.github.io/es/index.html","id":"derivative-quantities","dir":"","previous_headings":"Methods","what":"Derivative quantities","title":"Tools for analyzing environmental sampling data","text":"Calculate viral load (requires standard curve data) Calculate delta delta Ct (requires reference target)","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"adding-metadata","dir":"","previous_headings":"Methods","what":"Adding metadata","title":"Tools for analyzing environmental sampling data","text":"Retrieve metadata: Precipitation Temperature Evaporative Stress Index (ESI) Elevation Topography (slope, aspect) Topographical Wetness Index (TWI) Flow Accumulation Discharge nearest river Catchments Population sizes (catchment, admin unit, within buffer) Flood potential ESA land use type (10m) Administrative units World Bank variables: poverty, access electricity Calculate summary sampling statistics Estimate cross correlations Estimate time series models Estimate models pathogen presence based multiple gene targets","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"visualization","dir":"","previous_headings":"","what":"Visualization","title":"Tools for analyzing environmental sampling data","text":"Launch Rshiny application","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Tools for analyzing environmental sampling data","text":"full demo package please see vignettes located .","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for analyzing environmental sampling data","text":"Use devtools package install development version es GitHub repository. R version >= 3.5.0 recommended.","code":"install.packages(\"whitebox\", dependencies=TRUE) whitebox::install_whitebox() whitebox::wbt_version()  install.packages('devtools') devtools::install_github(\"ropenscilabs/geojsonlint\", dependencies=TRUE) devtools::install_github('wpgp/wopr', dependencies=TRUE) devtools::install_github(\"gilesjohnr/es\", dependencies=TRUE)"},{"path":"https://gilesjohnr.github.io/es/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Tools for analyzing environmental sampling data","text":"general questions, contact John Giles (john.giles@gatesfoundation.org) /Jillian Gauld (jillian.gauld@gatesfoundation.org). Note software made available Creative Commons 4.0 license developed specific environmental sampling applications therefore may generalize perfectly settings.","code":""},{"path":"https://gilesjohnr.github.io/es/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Tools for analyzing environmental sampling data","text":"work developed Institute Disease Modeling support funded research grants made Bill & Melinda Gates Foundation.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/apply_delta_delta_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"function calculate delta delta Ct metric applicable observations data.frame applying calc_delta_delta_ct function. data.frame must following columns: 'location_id', 'sample_date', 'target_name', 'ct_value'. relevant target_names associated reference_names must provided. result data.frame containing 'delta_delta_ct' column can merge source data.frame.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/apply_delta_delta_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"","code":"apply_delta_delta_ct(   df,   target_names,   reference_names,   amplification_efficiency = 1 )"},{"path":"https://gilesjohnr.github.io/es/reference/apply_delta_delta_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"df data.frame class esdata. target_names Character vector giving names target genes. reference_names Character vector giving names reference genes associated target gene. amplification_efficiency scalar 0 1 giving assumed PCR amplification efficiency samples equation. Defaults 1, assumes 100% efficiency.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/apply_delta_delta_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/apply_delta_delta_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply the delta delta Ct calculation to a data.frame — apply_delta_delta_ct","text":"","code":"if (FALSE) {  df_example <- data.frame(location_id = c(rep(1,9), rep(2,9), rep(3,9)),                          sample_date = as.Date(rep(c(rep('2024-01-01',3),                                                      rep('2024-01-02',3),                                                      rep('2024-01-03',3)),                                                    3)),                          target_name = rep(c('gene1', 'gene2', 'housekeeping'), 9),                          ct_value = as.numeric(runif(27, min=5, max=40)))  df_result <- apply_delta_delta_ct(df = df_example,                                   target_names = c('gene1', 'gene2'),                                   reference_names = c('housekeeping', 'housekeeping'),                                   amplification_efficiency = 0.95)  merge(df_example,       df_result,       by=c('location_id', 'sample_date', 'target_name'),       all.x=TRUE)  }"},{"path":"https://gilesjohnr.github.io/es/reference/calc_delta_delta_ct.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate delta delta Ct — calc_delta_delta_ct","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"function calculates relative gene expression using delta delta Ct method described https://www.sciencedirect.com/science/article/abs/pii/S1046202301912629?via%3DihubLivak & Schmittgen (2001).","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_delta_delta_ct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"","code":"calc_delta_delta_ct(   ct_target_t,   ct_reference_t,   ct_target_t0,   ct_reference_t0,   amplification_efficiency = 1 )"},{"path":"https://gilesjohnr.github.io/es/reference/calc_delta_delta_ct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"ct_target_t scalar providing Ct value target gene observation time t ct_reference_t scalar providing Ct value reference gene observation time t ct_target_t0 scalar providing Ct value target gene reference observation time t=0 ct_reference_t0 scalar providing Ct value reference gene reference observation time t=0 amplification_efficiency scalar 0 1 giving assumed PCR amplification efficiency samples equation. Defaults 1, assumes 100% efficiency.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_delta_delta_ct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"Scalar","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_delta_delta_ct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate delta delta Ct — calc_delta_delta_ct","text":"","code":"if (FALSE) {  calc_delta_delta_ct(ct_target_t = 32.5,                     ct_reference_t = 25,                     ct_target_t0 = 34,                     ct_reference_t0 = 30,                     amplification_efficiency = 0.95)  }"},{"path":"https://gilesjohnr.github.io/es/reference/calc_n_copies.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate number of target copies — calc_n_copies","title":"Calculate number of target copies — calc_n_copies","text":"function calculates quantitative value qPCR Ct value. Cycle threshold converted estimated number gene target copies (e.g. viral load viral pathogen) fitting log linear model standard curve data using model find point estimate provided Ct values.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_n_copies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate number of target copies — calc_n_copies","text":"","code":"calc_n_copies(ct_values, target_names, standard_curves)"},{"path":"https://gilesjohnr.github.io/es/reference/calc_n_copies.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate number of target copies — calc_n_copies","text":"ct_values numeric vector giving Ct value observation. target_names character vector giving target names element 'ct_values'. standard_curves data.frame containing results standard curve dilution experiment. Elements 'target_names' must map either 'target_name_unique' 'target_name_concise'. See package data object standard_curves_dhaka template.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_n_copies.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate number of target copies — calc_n_copies","text":"Vector","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_n_copies.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate number of target copies — calc_n_copies","text":"","code":"if (FALSE) {  compiled_tac <- read.csv('/Users/tac/compiled_tac.csv')  test <- calc_n_copies(ct_values = compiled_tac$ct_value,                       target_names = compiled_tac$target_name,                       standard_curves = standard_curves_dhaka)  compiled_tac$n_copies <- test  }"},{"path":"https://gilesjohnr.github.io/es/reference/calc_sample_sizes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate sample sizes — calc_sample_sizes","title":"Calculate sample sizes — calc_sample_sizes","text":"function takes compiled data.frame compile_tac_data calculates basic sample sizes targets.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_sample_sizes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate sample sizes — calc_sample_sizes","text":"","code":"calc_sample_sizes(d)"},{"path":"https://gilesjohnr.github.io/es/reference/calc_sample_sizes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate sample sizes — calc_sample_sizes","text":"d data.frame produced compile_tac_data function containing 'target_name' 'ct_value' columns.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_sample_sizes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate sample sizes — calc_sample_sizes","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/calc_sample_sizes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate sample sizes — calc_sample_sizes","text":"","code":"if (FALSE) {  compiled_tac <- read.csv('/Users/tac/compiled_tac.csv') calc_sample_sizes(compiled_tac)  }"},{"path":"https://gilesjohnr.github.io/es/reference/coords_to_iso3.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert coordinates to ISO country code — coords_to_iso3","title":"Convert coordinates to ISO country code — coords_to_iso3","text":"function takes set longitude latitude coordinates retrieves administrative units point lies within. administrative units given ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).","code":""},{"path":"https://gilesjohnr.github.io/es/reference/coords_to_iso3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert coordinates to ISO country code — coords_to_iso3","text":"","code":"coords_to_iso3(lon, lat)"},{"path":"https://gilesjohnr.github.io/es/reference/coords_to_iso3.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert coordinates to ISO country code — coords_to_iso3","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/coords_to_iso3.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert coordinates to ISO country code — coords_to_iso3","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/coords_to_iso3.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert coordinates to ISO country code — coords_to_iso3","text":"","code":"if (FALSE) {  coords_to_iso3(lon = template_es_data$lon,                lat = template_es_data$lat)  }"},{"path":"https://gilesjohnr.github.io/es/reference/dot-init_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialize a progress bar — .init_pb","title":"Initialize a progress bar — .init_pb","text":"wrapper function 'progress' package initialize default progress bar long loops","code":""},{"path":"https://gilesjohnr.github.io/es/reference/dot-init_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialize a progress bar — .init_pb","text":"","code":".init_pb(x)"},{"path":"https://gilesjohnr.github.io/es/reference/dot-init_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialize a progress bar — .init_pb","text":"x Integer giving length loop","code":""},{"path":"https://gilesjohnr.github.io/es/reference/dot-init_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Initialize a progress bar — .init_pb","text":"","code":"if (FALSE) {      len <- 100      pb <- .init_pb(len)      for (i in 1:len) {           pb$tick()           Sys.sleep(0.01)           } }"},{"path":"https://gilesjohnr.github.io/es/reference/download_admin_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download administrative boundaries from GADM — download_admin_data","title":"Download administrative boundaries from GADM — download_admin_data","text":"function takes single ISO country code, vector multiple ISO country codes, downloads corresponding high resolution administrative boundary shapefiles https://gadm.org/ via geodata::gadm function. detailed administrative units returned (level 4 countries).","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_admin_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download administrative boundaries from GADM — download_admin_data","text":"","code":"download_admin_data(iso3, output_path)"},{"path":"https://gilesjohnr.github.io/es/reference/download_admin_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download administrative boundaries from GADM — download_admin_data","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). Can accept vector multiple ISO codes. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_admin_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download administrative boundaries from GADM — download_admin_data","text":"","code":"if (FALSE) {  download_admin_data(iso3 = c('FRA', 'ITA'), output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/download_elevation_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download DEM from AWS Terrain Tiles — download_elevation_data","title":"Download DEM from AWS Terrain Tiles — download_elevation_data","text":"function takes coordinates sampling sites (longitude latitude) downloads Digital Elevation Model (DEM) surrounding area. DEM approximate spatial resolution 100 meters. data derived Shuttle Radar Topography Mission (SRTM) DEM, accessible Amazon Web Services (AWS) API elevatr R package.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_elevation_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download DEM from AWS Terrain Tiles — download_elevation_data","text":"","code":"download_elevation_data(lon, lat, output_path)"},{"path":"https://gilesjohnr.github.io/es/reference/download_elevation_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download DEM from AWS Terrain Tiles — download_elevation_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees.Can accept vector multiple ISO codes. lat numeric vector giving latitude sampling sites Decimal Degrees. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_elevation_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download DEM from AWS Terrain Tiles — download_elevation_data","text":"","code":"if (FALSE) {  download_elevation_data(lon = template_es_data$lon,                         lat = template_es_data$lat,                         output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/download_gadm_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download administrative boundaries from GADM — download_gadm_data","title":"Download administrative boundaries from GADM — download_gadm_data","text":"function takes single ISO country code, vector multiple ISO country codes, downloads corresponding high resolution administrative boundary shapefiles https://gadm.org/ via geodata::gadm function. detailed administrative units returned (level 4 countries).","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_gadm_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download administrative boundaries from GADM — download_gadm_data","text":"","code":"download_gadm_data(iso3, output_path)"},{"path":"https://gilesjohnr.github.io/es/reference/download_gadm_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download administrative boundaries from GADM — download_gadm_data","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). Can accept vector multiple ISO codes. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_gadm_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download administrative boundaries from GADM — download_gadm_data","text":"","code":"if (FALSE) {  download_gadm_data(iso3 = c('FRA', 'ITA'), output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/download_population_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download population raster data from WorldPop — download_population_data","title":"Download population raster data from WorldPop — download_population_data","text":"function takes single ISO country code, vector multiple ISO country codes, downloads appropriate 100m resolution population count raster data WorldPop REST API. Note data spatial disaggregations census data using random forest models described Lloyd et al. 2019 available manual download https://hub.worldpop.org/geodata/listing?id=29. Downloaded data sets saved output_path directory .tif format.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_population_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download population raster data from WorldPop — download_population_data","text":"","code":"download_population_data(iso3, output_path)"},{"path":"https://gilesjohnr.github.io/es/reference/download_population_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download population raster data from WorldPop — download_population_data","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). Can accept vector multiple ISO codes. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_population_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download population raster data from WorldPop — download_population_data","text":"","code":"if (FALSE) {  download_population_data(iso3 = 'FRA', output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/download_wopr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download population raster data from WorldPop — download_wopr_data","title":"Download population raster data from WorldPop — download_wopr_data","text":"function takes single ISO country code, vector multiple ISO country codes, downloads appropriate 100m resolution population count raster data WorldPop REST API. Note data spatial disaggregations census data using random forest models described Lloyd et al. 2019 available manual download https://hub.worldpop.org/geodata/listing?id=29. Downloaded data sets saved output_path directory .tif format.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_wopr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download population raster data from WorldPop — download_wopr_data","text":"","code":"download_wopr_data(iso3, output_path)"},{"path":"https://gilesjohnr.github.io/es/reference/download_wopr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download population raster data from WorldPop — download_wopr_data","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). Can accept vector multiple ISO codes. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_wopr_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download population raster data from WorldPop — download_wopr_data","text":"","code":"if (FALSE) {  download_wopr_data(iso3 = 'FRA', output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/download_worldpop_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download WorldPop population raster data — download_worldpop_data","title":"Download WorldPop population raster data — download_worldpop_data","text":"function takes single ISO country code downloads appropriate population count raster data (100m grid cell resolution) WorldPop FTP data server. Note data spatial disaggregations census data using random forest models described Lloyd et al. 2019 available manual download https://hub.worldpop.org/geodata/listing?id=29. Downloaded data sets saved output_path directory .tif format.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_worldpop_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download WorldPop population raster data — download_worldpop_data","text":"","code":"download_worldpop_data(   iso3,   year,   constrained = FALSE,   UN_adjusted = FALSE,   output_path )"},{"path":"https://gilesjohnr.github.io/es/reference/download_worldpop_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download WorldPop population raster data — download_worldpop_data","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3). Can accept vector multiple ISO codes. year numeric integer scalar giving year WorldPop data download (2024-05-15, years 2000-2020 available) constrained Logical indicating whether get population counts estimated using constrained models (details ). Default FALSE. UN_adjusted Logical indicating whether get population counts adjusted match United Nations national population estimates (details ). Default FALSE. output_path character string giving file path output directory save downloaded data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/download_worldpop_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download WorldPop population raster data — download_worldpop_data","text":"","code":"if (FALSE) {  download_worldpop_data(iso3='TWN',                        year=2020,                        constrained=FALSE,                        UN_adjusted=FALSE,                        output_path=getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_admin_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get administrative data for a set of points — get_admin_data","title":"Get administrative data for a set of points — get_admin_data","text":"function takes set longitude latitude coordinates retrieves administrative units point lies within. high resolution shapefiles used determine administrative boundaries acquired https://gadm.org/ via geodata::gadm function.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_admin_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get administrative data for a set of points — get_admin_data","text":"","code":"get_admin_data(lon, lat, save_data = FALSE)"},{"path":"https://gilesjohnr.github.io/es/reference/get_admin_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get administrative data for a set of points — get_admin_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. save_data Logical indicating whether save shapefiles used identify administrative units. Default FALSE temp directory deleted.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_admin_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get administrative data for a set of points — get_admin_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_admin_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get administrative data for a set of points — get_admin_data","text":"","code":"if (FALSE) {  get_admin_data(lon = template_es_data$lon,                lat = template_es_data$lat,                save_data = FALSE)  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_elevation_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get elevation data — get_elevation_data","title":"Get elevation data — get_elevation_data","text":"function takes information set environmental samples collected retrieves elevation (meters) locations approximate 100m spatial resolution. Data come SRTM DEM accessed Amazon Web Services (AWS) API elevatr R package.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_elevation_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get elevation data — get_elevation_data","text":"","code":"get_elevation_data(lon, lat)"},{"path":"https://gilesjohnr.github.io/es/reference/get_elevation_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get elevation data — get_elevation_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_elevation_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get elevation data — get_elevation_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_elevation_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get elevation data — get_elevation_data","text":"","code":"if (FALSE) {  get_elevation_data(lon = template_es_data$lon,                    lat = template_es_data$lat)  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_esi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Evaporative Stress Index (ESI) data — get_esi_data","title":"Get Evaporative Stress Index (ESI) data — get_esi_data","text":"function takes information set environmental samples collected retrieves Evaporative Stress Index (ESI) locations times. information ESI, see description . Data come Climate Hazards Center InfraRed Precipitation Station data (CHIRPS) via chirps R package. Additionally, optional intervals argument specifies set intervals function calculate average ESI previous X number days location.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_esi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Evaporative Stress Index (ESI) data — get_esi_data","text":"","code":"get_esi_data(lon, lat, dates, intervals = NULL)"},{"path":"https://gilesjohnr.github.io/es/reference/get_esi_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Evaporative Stress Index (ESI) data — get_esi_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. dates character date vector dates giving date sample collected (format YYYY-MM-DD) intervals integer vector giving set time intervals calculate average ESI. Default NULL interval 0 (returns ESI value time t). intervals=3 average ESI preceding 3 days returned.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_esi_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Evaporative Stress Index (ESI) data — get_esi_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_esi_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Evaporative Stress Index (ESI) data — get_esi_data","text":"","code":"if (FALSE) {  d <- get_esi_data(lon = c(-54.9857, -52.9857), lat = c(-5.9094, -25.8756), dates = c(\"2020-06-01\", \"2020-10-31\"), intervals = c(5,10,20))  head(d)  ggplot2::ggplot(d, aes(x = date)) +      geom_line(aes(y = esi_daily_avg_20, col='Average ESI 20 days')) +      geom_line(aes(y = esi_daily_avg_10, col='Average ESI 10 days')) +      geom_line(aes(y = esi_daily_avg_5, col='Average ESI 5 days')) +      geom_line(aes(y = esi_daily_avg)) +      facet_grid(rows=vars(id)) +      labs(x=\"\", y = \"Evaporative Stress Index (ESI)\") +      theme_bw() +      theme(legend.position = 'bottom',            legend.title = element_blank())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_hydro_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get hydrological data — get_hydro_data","title":"Get hydrological data — get_hydro_data","text":"function takes information set environmental samples collected retrieves suite topographical hydrological variables unique location. variables include: elevation, slope, aspect, Topographical Wetness Index (TWI), flow accumulation, total flow accumulation within 500m, distance nearest stream. DEM provided, DEM acquired via elevatr::get_elev_raster suite variables calculated using functions 'WhiteboxTools' R frontend.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_hydro_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get hydrological data — get_hydro_data","text":"","code":"get_hydro_data(lon, lat, save_data = FALSE)"},{"path":"https://gilesjohnr.github.io/es/reference/get_hydro_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get hydrological data — get_hydro_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. save_data Logical indicating whether save intermediate raster layers used calculate hydrological variables point. Default FALSE temp directory deleted.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_hydro_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get hydrological data — get_hydro_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_hydro_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get hydrological data — get_hydro_data","text":"","code":"if (FALSE) {  get_hydro_data(lon = template_es_data$lon,                lat = template_es_data$lat,                save_data = FALSE)  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_local_population_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population counts for a local area — get_local_population_data","title":"Get population counts for a local area — get_local_population_data","text":"Get population counts local area","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_local_population_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population counts for a local area — get_local_population_data","text":"","code":"get_local_population_data(lon, lat, type)"},{"path":"https://gilesjohnr.github.io/es/reference/get_local_population_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population counts for a local area — get_local_population_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. type character string giving type local population calculate. Options : 'catchment', 'radius', 'admin'.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_local_population_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population counts for a local area — get_local_population_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_local_population_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get population counts for a local area — get_local_population_data","text":"","code":"if (FALSE) {  download_wopr_data(iso3 = 'FRA', output_path = getwd())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_population_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get population data — get_population_data","title":"Get population data — get_population_data","text":"function takes information set environmental samples collected retrieves suite topographical hydrological variables unique location. variables include: elevation, slope, aspect, Topographical Wetness Index (TWI), flow accumulation, total flow accumulation within 500m, distance nearest stream. DEM acquired via elevatr::get_elev_raster suite variables calculated using functions 'WhiteboxTools' R frontend.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_population_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get population data — get_population_data","text":"","code":"get_population_data(lon, lat, save_data = FALSE)"},{"path":"https://gilesjohnr.github.io/es/reference/get_population_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get population data — get_population_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. save_data Logical indicating whether save intermediate raster layers used calculate hydrological variables point. Default FALSE temp directory deleted.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_population_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get population data — get_population_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_population_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get population data — get_population_data","text":"","code":"if (FALSE) {  get_population_data(lon = template_es_data$lon,                     lat = template_es_data$lat,                     save_data = FALSE)  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_precip_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get precipitation data — get_precip_data","title":"Get precipitation data — get_precip_data","text":"function takes information set environmental samples collected retrieves precipitation data (millimeters) locations times. Data come Open-Meteo Historical Weather API (https://open-meteo.com/en/docs/historical-weather-api) via openmeteo R package. Additionally, optional intervals argument specifies set intervals function calculate cumulative sum precipitation millimeters (mm) previous X number days location.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_precip_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get precipitation data — get_precip_data","text":"","code":"get_precip_data(lon, lat, dates, intervals = NULL)"},{"path":"https://gilesjohnr.github.io/es/reference/get_precip_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get precipitation data — get_precip_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. dates character date vector dates giving date sample collected (format YYYY-MM-DD) intervals integer vector giving set time intervals sum precipitation data. Default NULL interval 0 (returns precipitation value time t). intervals=3 cumulative precipitation preceding 3 days returned.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_precip_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get precipitation data — get_precip_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_precip_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get precipitation data — get_precip_data","text":"","code":"if (FALSE) {  d <- get_precip_data(lon = c(-56.0281, -54.9857),                      lat = c(-2.9094, -2.8756),                      dates = c(\"2017-12-01\", \"2017-12-31\"),                      intervals = c(1,3,7))  head(d)  ggplot2::ggplot(d, aes(x = date)) +      geom_line(aes(y = precip_daily_sum_7, col='Cumulative sum 7 days')) +      geom_line(aes(y = precip_daily_sum_3, col='Cumulative sum 3 days')) +      geom_line(aes(y = precip_daily_sum_1, col='Cumulative sum 1 day')) +      geom_line(aes(y = precip_daily_sum)) +      facet_grid(rows=vars(id)) +      labs(x=\"\", y = \"Precipitation (mm)\") +      theme_bw() +      theme(legend.position = 'bottom',            legend.title = element_blank())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_river_discharge_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get river discharge data — get_river_discharge_data","title":"Get river discharge data — get_river_discharge_data","text":"function takes information set environmental samples collected retrieves daily river discharge data nearest river (\\(m^3/s\\)) locations times. Data come Open-Meteo Global Flood API (https://open-meteo.com/en/docs/flood-api) via openmeteo R package.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_river_discharge_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get river discharge data — get_river_discharge_data","text":"","code":"get_river_discharge_data(lon, lat, dates)"},{"path":"https://gilesjohnr.github.io/es/reference/get_river_discharge_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get river discharge data — get_river_discharge_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. dates character date vector dates giving date sample collected (format YYYY-MM-DD)","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_river_discharge_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get river discharge data — get_river_discharge_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_river_discharge_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get river discharge data — get_river_discharge_data","text":"","code":"if (FALSE) {  d <- get_river_discharge_data(lon = c(-54.9857, -52.9857),                               lat = c(-10.9094, -25.8756),                               dates = c(\"2020-06-01\", \"2020-10-31\"))  head(d)  ggplot2::ggplot(d, aes(x = date)) +      geom_line(aes(y = daily_river_discharge)) +      facet_grid(rows=vars(id)) +      labs(x=\"\", y = \"Local River Discharge (m^3/s)\") +      theme_bw() +      theme(legend.position = 'bottom',            legend.title = element_blank())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_temp_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get temperature data — get_temp_data","title":"Get temperature data — get_temp_data","text":"function takes information set environmental samples collected retrieves temperature data (measured accumulated degree-days) locations times. Data come Open-Meteo Historical Weather API (https://open-meteo.com/en/docs/historical-weather-api) via openmeteo R package. optional intervals argument specifies set intervals function calculate accumulated temperature form Accumulated Thermal Units (ATUs) interval.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_temp_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get temperature data — get_temp_data","text":"","code":"get_temp_data(lon, lat, dates, intervals = NULL)"},{"path":"https://gilesjohnr.github.io/es/reference/get_temp_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get temperature data — get_temp_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. dates character date vector dates giving date sample collected (format YYYY-MM-DD) intervals integer vector giving set time intervals calculate accumulated degree-days. Default NULL interval 0 (returns daily temperature degrees Celsius time t). intervals=3 accumulated degree-days preceding 3 days returned.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_temp_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get temperature data — get_temp_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_temp_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get temperature data — get_temp_data","text":"","code":"if (FALSE) {  d <- get_temp_data(lon = c(30.0281, -52.9857), lat = c(15.9094, -25.8756), dates = c(\"2020-08-01\", \"2020-12-31\"), intervals = c(1,5,10))  head(d)  ggplot2::ggplot(d, aes(x = date)) +      geom_line(aes(y = temp_daily_atu_10, col='Accumulated temperature 10 days')) +      geom_line(aes(y = temp_daily_atu_5, col='Accumulated temperature 5 days')) +      geom_line(aes(y = temp_daily_atu_1, col='Accumulated temperature 1 day')) +      geom_line(aes(y = temp_daily_atu)) +      facet_grid(rows=vars(id)) +      labs(x=\"\", y = \"Accumulated Thermal Units (ATUs)\") +      theme_bw() +      theme(legend.position = 'bottom',            legend.title = element_blank())  }"},{"path":"https://gilesjohnr.github.io/es/reference/get_topo_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get topographical data — get_topo_data","title":"Get topographical data — get_topo_data","text":"function takes information set environmental samples collected retrieves 100m elevation raster around locations calculates slope aspect point. DEM acquired via elevatr::get_elev_raster topographical variables calculated using raster::terrain.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_topo_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get topographical data — get_topo_data","text":"","code":"get_topo_data(lon, lat, show_plots = FALSE)"},{"path":"https://gilesjohnr.github.io/es/reference/get_topo_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get topographical data — get_topo_data","text":"lon numeric vector giving longitude sampling sites Decimal Degrees. lat numeric vector giving latitude sampling sites Decimal Degrees. show_plots Logical indicating whether plot raster point data.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_topo_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get topographical data — get_topo_data","text":"data.frame","code":""},{"path":"https://gilesjohnr.github.io/es/reference/get_topo_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get topographical data — get_topo_data","text":"","code":"if (FALSE) {  get_topo_data(lon = template_es_data$lon,               lat = template_es_data$lat,               show_plots = TRUE)  }"},{"path":"https://gilesjohnr.github.io/es/reference/logmean.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mean in log space — logmean","title":"Calculate the mean in log space — logmean","text":"function gives mean taken log-scale set numeric values. Values less equal zero ignored NA. Best suited values taken highly skewed distribution, Ct values often .","code":""},{"path":"https://gilesjohnr.github.io/es/reference/logmean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mean in log space — logmean","text":"","code":"logmean(x)"},{"path":"https://gilesjohnr.github.io/es/reference/logmean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mean in log space — logmean","text":"x vector containing numeric values","code":""},{"path":"https://gilesjohnr.github.io/es/reference/logmean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mean in log space — logmean","text":"Scalar","code":""},{"path":"https://gilesjohnr.github.io/es/reference/logmean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mean in log space — logmean","text":"","code":"if (FALSE) {  logmean(c(24.3, 10.3, 40, NA, 0, -1, 0.05))  }"},{"path":"https://gilesjohnr.github.io/es/reference/query_wopr_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Query the WorldPop REST API — query_wopr_api","title":"Query the WorldPop REST API — query_wopr_api","text":"function queries WorldPop REST API population raster metadata associated particular ISO country code. ISO country code provided, function returns metadata available ISO codes WorldPop API.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/query_wopr_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query the WorldPop REST API — query_wopr_api","text":"","code":"query_wopr_api(iso3)"},{"path":"https://gilesjohnr.github.io/es/reference/query_wopr_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query the WorldPop REST API — query_wopr_api","text":"iso3 three-letter capitalized character string. Must follow ISO-3166 Alpha-3 country code standard (https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3).","code":""},{"path":"https://gilesjohnr.github.io/es/reference/query_wopr_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query the WorldPop REST API — query_wopr_api","text":"list","code":""},{"path":"https://gilesjohnr.github.io/es/reference/query_wopr_api.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query the WorldPop REST API — query_wopr_api","text":"","code":"if (FALSE) {  query_wopr_api('USA') query_wopr_api(NULL)  }"},{"path":"https://gilesjohnr.github.io/es/reference/template_es_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Template environmental sampling data — template_es_data","title":"Template environmental sampling data — template_es_data","text":"template_es_data object provides template data format required es package.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/template_es_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template environmental sampling data — template_es_data","text":"","code":"template_es_data"},{"path":[]},{"path":"https://gilesjohnr.github.io/es/reference/template_es_data.html","id":"template-es-data","dir":"Reference","previous_headings":"","what":"template_es_data","title":"Template environmental sampling data — template_es_data","text":"data frame 6 columns: date date sample collected. Formate \"YYYY-MM-DD\". location_id unique identifier sampling locations. lat lattitude sampling location decimal degrees. lon longitude sampling location decimal degrees. target_name unique name gene target Ct values correspond. ct_value Cycle Threshold (Ct) qPCR assay.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/template_standard_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Template standard curve data — template_standard_curve","title":"Template standard curve data — template_standard_curve","text":"template_standard_curve object provides template data format required es package standard curve values. data required calculating number gene copies using calc_n_copies function.","code":""},{"path":"https://gilesjohnr.github.io/es/reference/template_standard_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Template standard curve data — template_standard_curve","text":"","code":"template_standard_curve"},{"path":[]},{"path":"https://gilesjohnr.github.io/es/reference/template_standard_curve.html","id":"template-standard-curve","dir":"Reference","previous_headings":"","what":"template_standard_curve","title":"Template standard curve data — template_standard_curve","text":"data frame 3 columns: target_name unique name gene target Ct values correspond. n_copies number gene copies represented particular dilution. ct_value Cycle Threshold (Ct) qPCR assay.","code":""}]
